{
	// Place your Obszar roboczy leafbox snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
  "ServerAction": {
    "prefix": "saction",
    "body": [
      "const $FUNCTION_NAME = async ($2) => {",
      "\t\t\"use server\";",
      "",
      "\t\tconst res = await fetch(",
      "\t\t\t`http://${process.env.NEXT_PUBLIC_API_HOST}${process.env.NEXT_PUBLIC_API_ROUTE}/$ENDPOINT`,",
      "\t\t\t{",
      "\t\t\t\tmethod: \"$POST\",",
      "\t\t\t\theaders: {",
      "\t\t\t\t\t\"Content-Type\": \"application/json\",",
      "\t\t\t\t},",
      "\t\t\t\tbody: JSON.stringify($2),",
      "\t\t\t}",
      "\t\t);",
      "\t\tconst data = await res.json();",
      "\t\tconst status = res.status;",
      "\t\treturn {data, status};",
      "\t};"
    ]
  }
  "ServerAction Cast": {
    "prefix": "sactioncast",
    "body": [
      "await $FUNCTION_NAME($PAYLOAD)",
      "\t.then((res) => {",
      "\t\tconst status = res.status;",
      "\t\tconst data = res.data;",
      "\t}).catch((err) => {",
      "\t\t// handle error"
      "\t});"
    ]
  }
}